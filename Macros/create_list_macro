// create_list macro 

///////////////////////////////////////////////////////////////////////////////////
/*Copyright (C) 2016  Francisco J. Maza.
* IFIByNE-CONICET/F.C.E.N., Universidad de Buenos Aires
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.*/
////////////////////////////////////////////////////////////////////////////////////
// 1.8 (10/04/20199:	> added variables startframe and stopframe for analysis routines with python
// 1.7 (04/08/2018):	> line 32 added to set measurements to display row number in results table, necessary for using list file in following macros.This solve problem of 1.5 and 1.6
// 1.6 (03/08/2018):	> reverted added column of 1.5. The save command was changed to SaveAs
// 1.5 (31/07/2018):	> a column is added if OS is Windows (windows or new FIJI seems to be counting columns from the list differently, starting in 0, check results or file reading)
// 1.4 (15/04/2016):	> code edition (indentation, unnecessary lines deleted, etc) 
// 1.3 (20/04/2015):	> added function "stimulusType(name)": search in the name video for the stimulus type and writes the variables in the list accordingly
// 1.2 (15/01/2015):	> Checkbox applied for selecting multiple experiments
// 1.1 (30/07/2014):	> added multiple experiments option
// 1.0 (17/06/2014):	> initial version
 
macro "create_list" {
	//Get the folder path 
	String.resetBuffer;
	run("Set Measurements...", " display "); // command that is requiered for automatically show row numbers in the results table
	DIR_PATH=getDirectory("Select your ImageJ_ImagingAnalysis folder"); //ImageJ_ImagingAnalysis folder should contain the following subfolders :
										//data (containing "Experiment" folder with .tif videos);
										//list (containing experiment list created by "create_list macro");
										//coors (containing roi list coors saved using roi managerAS : "ExperimentName.txt");
										//masks (containing roiset.zip saved using roi manager AS : "ExperimentName.txt.zip");
										//data_deltaF (will contain "Experiment" folder with "deltaF" .tif videos);
										//ImageJ_Output (will receive data results from "measure_bleaching_corrected" macro);
	
	//Get all Experiments names
	ALL_EXP=getFileList(DIR_PATH+"data_deltaF");
	EXP_ARRAY=newArray(ALL_EXP.length);
	
	//Create experiment array
	for (i=0; i<ALL_EXP.length; i++) {
		LENGTH=lengthOf(ALL_EXP[i]);
		EXP_ARRAY[i]=substring(ALL_EXP[i],0,LENGTH);
		}
	EXP_ARRAY_WITH_NONE=newArray(EXP_ARRAY.length+1);
	NONE_Array=newArray("");
	EXP_ARRAY_WITH_NONE=Array.concat(NONE_Array,EXP_ARRAY);
	
	
	defaults = newArray(EXP_ARRAY.length);
	
	for (i=0; i<EXP_ARRAY.length; i++) {
	           defaults[i] = false;
		}
	if (EXP_ARRAY.length>10) {
	  	rows = 10;
	  	columns = (EXP_ARRAY.length+10)/10;
	 	}
	if (EXP_ARRAY.length<=10){
	  	rows= EXP_ARRAY.length+1;
	  	columns = 1;
		}
	
	n_checkboxes = rows * columns;
	Dialog.create("Choose Experiment");
	Dialog.addCheckboxGroup(rows,columns,EXP_ARRAY,defaults);
	Dialog.show();
	
	EXP_ARRAY_SELECTION=newArray(EXP_ARRAY.length);
	for (s=0;s<EXP_ARRAY.length;s++){
		if (Dialog.getCheckbox()==true)EXP_ARRAY_SELECTION[s]=EXP_ARRAY[s];
		else EXP_ARRAY_SELECTION[s]="";
		}
	
	EXP_ARRAY_SELECTION_sorted=Array.copy(EXP_ARRAY_SELECTION);	//this is the array for the expeiments selected to be analized, sorted up-down
	Array.sort(EXP_ARRAY_SELECTION_sorted);
	Array.reverse(EXP_ARRAY_SELECTION_sorted);
		
	/*--------------------------------------------------------------------------------*/
	for (d=0;d<EXP_ARRAY_SELECTION_sorted.length;d++){	//start loop for selected MULTIPLE experiments
		if (EXP_ARRAY_SELECTION_sorted[d]=="") {
			//setBatchMode("exit and display");
			showStatus("Finished");
			//Creation of the finished dialog box
			Dialog.create("create list");
			Dialog.addMessage("Finished");
			Dialog.show();
			exit;
			}
		else {
	
			//EXP_NAME=Dialog.getChoice();
			EXP_NAME=EXP_ARRAY_SELECTION_sorted[d];
			EXP_N=substring(EXP_NAME,0,LENGTH-1);
			EXP=substring(EXP_NAME,0,LENGTH-8);
			
			//Get all file names
			ALL_NAMES=getFileList(DIR_PATH +"data_deltaF/"+EXP_NAME);
			ALL_EXT=newArray(ALL_NAMES.length);
			ALL_NAMES_SHORT=newArray(ALL_NAMES.length);
			
			count = 1;
			//create experiment file list
			for (f=0; f<ALL_NAMES.length; f++) {
				rows= nResults;
				print((count++) +""+ ALL_NAMES[f]);
				/*if (substring (getInfo("os.name"), 0, 3)=="Win"){
					setResult("Extra",rows,NaN);
				}*/
				setResult("Number",rows,count-1);
				setResult("File",rows,ALL_NAMES[f]);
				setResult("Bin",rows,1);
				if (stimulusType(ALL_NAMES[f])==0) {	//DEFAULT SETTINGS, this one is for a video name where no set stimulus type is found
					setResult("StimulusON",rows,"116");
					setResult("StimulusOFF",rows,"161");
					setResult("Stimulus2ON",rows,"136");
					setResult("Stimulus2OFF",rows,"156");
					setResult("ROILIST",rows,EXP_N+".txt");
					setResult("xShift",rows,0);
					setResult("yShift",rows,0);
					setResult("framestoexcl",rows,"60");
					setResult("startframe",rows,"");
					setResult("stopframe",rows,"");
					}
				if (stimulusType(ALL_NAMES[f])==1) {
					setResult("StimulusON",rows,"26");
					setResult("StimulusOFF",rows,"55");
					setResult("Stimulus2ON",rows,"41");
					setResult("Stimulus2OFF",rows,"56");
					setResult("ROILIST",rows,EXP_N+".txt");
					setResult("xShift",rows,0);
					setResult("yShift",rows,0);
					setResult("framestoexcl",rows,"135");
					setResult("startframe",rows,"");
					setResult("stopframe",rows,"");
					}
				if (stimulusType(ALL_NAMES[f])==2) {
					setResult("StimulusON",rows,"116");
					setResult("StimulusOFF",rows,"161");
					setResult("Stimulus2ON",rows,"136");
					setResult("Stimulus2OFF",rows,"156");
					setResult("ROILIST",rows,EXP_N+".txt");
					setResult("xShift",rows,0);
					setResult("yShift",rows,0);
					setResult("framestoexcl",rows,"60");
					setResult("startframe",rows,"");
					setResult("stopframe",rows,"");
					}
				if (stimulusType(ALL_NAMES[f])==3) {
					setResult("StimulusON",rows,"100");
					setResult("StimulusOFF",rows,"110");
					setResult("Stimulus2ON",rows,"136");
					setResult("Stimulus2OFF",rows,"156");
					setResult("ROILIST",rows,EXP_N+".txt");
					setResult("xShift",rows,0);
					setResult("yShift",rows,0);
					setResult("framestoexcl",rows,"60");
					setResult("startframe",rows,"");
					setResult("stopframe",rows,"");
					}
				/*if (stimulusType(ALL_NAMES[f])==4) {  //add another stimulus type here and modify stimulus type function
					setResult("StimulusON",rows,"115");
					setResult("StimulusOFF",rows,"135");
					setResult("Stimulus2ON",rows,"136");
					setResult("Stimulus2OFF",rows,"156");
					setResult("ROILIST",rows,EXP_N+".txt");
					setResult("xShift",rows,0);
					setResult("yShift",rows,0);
					setResult("framestoexcl",rows,"60");
					setResult("startframe",rows);
					setResult("stopframe",rows);
				}*/
				updateResults();
				}
			
			selectWindow ("Results");
			saveAs("Results",DIR_PATH +"list/"+EXP_N+"_list.txt");
			//save(DIR_PATH +"list/"+EXP_N+"_list.txt");
			run("Clear Results");
			print("\\Clear");
			}
		}	//end of loop for MULTIPLE EXPERIMENTS	
	
	//setBatchMode("exit and display")
	showStatus("Finished");
	
	//Creation of the finished dialog box
	Dialog.create("create list");
	Dialog.addMessage("Finished");
	Dialog.show();
	 
	}	//end of macro
	
///////////////////////////////////////////////////////////////////////////////////

function stimulusType(name) {	//search for the stimulus name sequence inside video name 
 	i=0;
 	StimType=0;
 	while (i<lengthOf(name)) {
 		name_sub=substring (name, i, lengthOf(name));
 		if (startsWith(name_sub, "air")==true) StimType=1;
 		if (startsWith(name_sub, "visual2")==true) StimType=2;
 		if (startsWith(name_sub, "Luz")==true) StimType=3;
 		//if (startsWith(name_sub, "ANOTHER")==true) StimType=4; // just add another stimulus like this if necessary and modify from line 133
 		i +=1;
 		}
 	return StimType;
	}
 
